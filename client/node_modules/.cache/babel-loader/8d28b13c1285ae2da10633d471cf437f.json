{"ast":null,"code":"const config = {\n  type: 'line',\n  data: data,\n  options: {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'Chart.js Line Chart'\n      }\n    }\n  }\n};\nconst DATA_COUNT = 7;\nconst NUMBER_CFG = {\n  count: DATA_COUNT,\n  min: -100,\n  max: 100\n};\nconst labels = Utils.months({\n  count: 7\n});\nconst data = {\n  labels: labels,\n  datasets: [{\n    label: 'Dataset 1',\n    data: Utils.numbers(NUMBER_CFG),\n    borderColor: Utils.CHART_COLORS.red,\n    backgroundColor: Utils.transparentize(Utils.CHART_COLORS.red, 0.5)\n  }, {\n    label: 'Dataset 2',\n    data: Utils.numbers(NUMBER_CFG),\n    borderColor: Utils.CHART_COLORS.blue,\n    backgroundColor: Utils.transparentize(Utils.CHART_COLORS.blue, 0.5)\n  }]\n};\nconst actions = [{\n  name: 'Randomize',\n\n  handler(chart) {\n    chart.data.datasets.forEach(dataset => {\n      dataset.data = Utils.numbers({\n        count: chart.data.labels.length,\n        min: -100,\n        max: 100\n      });\n    });\n    chart.update();\n  }\n\n}, {\n  name: 'Add Dataset',\n\n  handler(chart) {\n    const data = chart.data;\n    const dsColor = Utils.namedColor(chart.data.datasets.length);\n    const newDataset = {\n      label: 'Dataset ' + (data.datasets.length + 1),\n      backgroundColor: Utils.transparentize(dsColor, 0.5),\n      borderColor: dsColor,\n      data: Utils.numbers({\n        count: data.labels.length,\n        min: -100,\n        max: 100\n      })\n    };\n    chart.data.datasets.push(newDataset);\n    chart.update();\n  }\n\n}, {\n  name: 'Add Data',\n\n  handler(chart) {\n    const data = chart.data;\n\n    if (data.datasets.length > 0) {\n      data.labels = Utils.months({\n        count: data.labels.length + 1\n      });\n\n      for (let index = 0; index < data.datasets.length; ++index) {\n        data.datasets[index].data.push(Utils.rand(-100, 100));\n      }\n\n      chart.update();\n    }\n  }\n\n}, {\n  name: 'Remove Dataset',\n\n  handler(chart) {\n    chart.data.datasets.pop();\n    chart.update();\n  }\n\n}, {\n  name: 'Remove Data',\n\n  handler(chart) {\n    chart.data.labels.splice(-1, 1); // remove the label first\n\n    chart.data.datasets.forEach(dataset => {\n      dataset.data.pop();\n    });\n    chart.update();\n  }\n\n}];","map":{"version":3,"sources":["/Users/naijeriatowett/Documents/100DaysOfCode/afya_yangu/client/src/components/Data.js"],"names":["config","type","data","options","responsive","plugins","legend","position","title","display","text","DATA_COUNT","NUMBER_CFG","count","min","max","labels","Utils","months","datasets","label","numbers","borderColor","CHART_COLORS","red","backgroundColor","transparentize","blue","actions","name","handler","chart","forEach","dataset","length","update","dsColor","namedColor","newDataset","push","index","rand","pop","splice"],"mappings":"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","sourcesContent":["const config = {\n    type: 'line',\n    data: data,\n    options: {\n        responsive: true,\n        plugins: {\n        legend: {\n            position: 'top',\n        },\n        title: {\n            display: true,\n            text: 'Chart.js Line Chart'\n        }\n    }\n    },\n};\n\nconst DATA_COUNT = 7;\nconst NUMBER_CFG = {count: DATA_COUNT, min: -100, max: 100};\n\nconst labels = Utils.months({count: 7});\nconst data = {\n  labels: labels,\n  datasets: [\n    {\n      label: 'Dataset 1',\n      data: Utils.numbers(NUMBER_CFG),\n      borderColor: Utils.CHART_COLORS.red,\n      backgroundColor: Utils.transparentize(Utils.CHART_COLORS.red, 0.5),\n    },\n    {\n      label: 'Dataset 2',\n      data: Utils.numbers(NUMBER_CFG),\n      borderColor: Utils.CHART_COLORS.blue,\n      backgroundColor: Utils.transparentize(Utils.CHART_COLORS.blue, 0.5),\n    }\n  ]\n};\n\nconst actions = [\n    {\n      name: 'Randomize',\n      handler(chart) {\n        chart.data.datasets.forEach(dataset => {\n          dataset.data = Utils.numbers({count: chart.data.labels.length, min: -100, max: 100});\n        });\n        chart.update();\n      }\n    },\n    {\n      name: 'Add Dataset',\n      handler(chart) {\n        const data = chart.data;\n        const dsColor = Utils.namedColor(chart.data.datasets.length);\n        const newDataset = {\n          label: 'Dataset ' + (data.datasets.length + 1),\n          backgroundColor: Utils.transparentize(dsColor, 0.5),\n          borderColor: dsColor,\n          data: Utils.numbers({count: data.labels.length, min: -100, max: 100}),\n        };\n        chart.data.datasets.push(newDataset);\n        chart.update();\n      }\n    },\n    {\n      name: 'Add Data',\n      handler(chart) {\n        const data = chart.data;\n        if (data.datasets.length > 0) {\n          data.labels = Utils.months({count: data.labels.length + 1});\n  \n          for (let index = 0; index < data.datasets.length; ++index) {\n            data.datasets[index].data.push(Utils.rand(-100, 100));\n          }\n  \n          chart.update();\n        }\n      }\n    },\n    {\n      name: 'Remove Dataset',\n      handler(chart) {\n        chart.data.datasets.pop();\n        chart.update();\n      }\n    },\n    {\n      name: 'Remove Data',\n      handler(chart) {\n        chart.data.labels.splice(-1, 1); // remove the label first\n  \n        chart.data.datasets.forEach(dataset => {\n          dataset.data.pop();\n        });\n  \n        chart.update();\n      }\n    }\n  ];"]},"metadata":{},"sourceType":"module"}